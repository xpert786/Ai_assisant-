{
  "info": {
    "name": "AI Project API Collection",
    "description": "Complete API collection for the AI-powered Django application with OCR, real-time chat, and message management features",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "ai-project-collection"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000/ai",
      "type": "string"
    },
    {
      "key": "openai_api_key",
      "value": "{{$dotenv OPENAI_API_KEY}}",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{openai_api_key}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication & Setup",
      "item": [
        {
          "name": "Check API Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                ""
              ]
            },
            "description": "Check if Django admin is accessible (requires authentication)"
          }
        }
      ],
      "description": "Authentication and basic setup endpoints"
    },
    {
      "name": "Real-time AI Chat",
      "item": [
        {
          "name": "Stream AI Response",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has content\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('response');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Hello, I need help with my business registration\",\n  \"message_id\": null,\n  \"conversation_history\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/stream-ai-response/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "stream-ai-response",
                ""
              ]
            },
            "description": "Stream AI response in real-time using Server-Sent Events"
          }
        },
        {
          "name": "Real-time Chat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains AI response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('response');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Can you help me understand business registration requirements?\",\n  \"conversation_id\": \"chat_123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/real-time-chat/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "real-time-chat",
                ""
              ]
            },
            "description": "Real-time chat endpoint for instant AI responses"
          }
        },
        {
          "name": "Chat History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is array of messages\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/chat-history/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "chat-history",
                ""
              ]
            },
            "description": "Get chat history with recent messages"
          }
        },
        {
          "name": "Chat Detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains chat data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('chat');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/chat-detail/1/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "chat-detail",
                "1",
                ""
              ]
            },
            "description": "Get detailed information about a specific chat message"
          }
        }
      ],
      "description": "Real-time AI chat and conversation endpoints"
    },
    {
      "name": "OCR & Image Processing",
      "item": [
        {
          "name": "OCR AI Image Upload",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains extracted text\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('extracted_text');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": [],
                  "description": "Upload an image file for OCR processing"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/ocr-ai-image-upload/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "ocr-ai-image-upload",
                ""
              ]
            },
            "description": "Upload an image for OCR processing with AI analysis"
          }
        }
      ],
      "description": "OCR and image processing endpoints"
    },
    {
      "name": "Message Management",
      "item": [
        {
          "name": "Create Message",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"I need help with business registration\",\n  \"client_name\": \"John Doe\",\n  \"client_contact\": \"john@example.com\",\n  \"source\": \"Manual\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/messages/create/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "create",
                ""
              ]
            },
            "description": "Create a new message for AI processing"
          }
        },
        {
          "name": "Get Message Detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/messages/1/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                ""
              ]
            },
            "description": "Get detailed information about a specific message"
          }
        },
        {
          "name": "Get Message JSON",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains message data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "    pm.expect(jsonData).to.have.property('ai_response');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/messages/1/json/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "json",
                ""
              ]
            },
            "description": "Get message data as JSON including image URL if present"
          }
        },
        {
          "name": "Update Message",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ai_response\": \"Updated AI response with corrections\",\n  \"final_response\": \"Final approved response\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/messages/1/update/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "update",
                ""
              ]
            },
            "description": "Update a message's AI response or final response"
          }
        },
        {
          "name": "Delete Message",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/messages/1/delete/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "delete",
                ""
              ]
            },
            "description": "Delete a specific message"
          }
        },
        {
          "name": "Generate PDF",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is PDF file\", function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/pdf');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/messages/1/pdf/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "pdf",
                ""
              ]
            },
            "description": "Generate a PDF from a message response"
          }
        },
        {
          "name": "Enhance Response",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains enhanced content\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('enhanced_response');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"edited_response\": \"Please enhance this response with more detailed information about business registration.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/messages/1/ajax-enhance/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "ajax-enhance",
                ""
              ]
            },
            "description": "Enhance a response with a follow-up using OpenAI"
          }
        }
      ],
      "description": "Message CRUD operations and management"
    },
    {
      "name": "Client Management",
      "item": [
        {
          "name": "Search Clients",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains search results\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('results');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"John Doe\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/search-clients/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search-clients",
                ""
              ]
            },
            "description": "Search across Clients, Accounts, and Leads tables"
          }
        },
        {
          "name": "Create Lead",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response indicates success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/messages/1/create-lead/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "create-lead",
                ""
              ]
            },
            "description": "Create a lead from a message with client information"
          }
        }
      ],
      "description": "Client search and lead management"
    },
    {
      "name": "Knowledge Base & Integration",
      "item": [
        {
          "name": "Save to Knowledge Base",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response indicates success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_action\": \"save_to_kb\",\n  \"additional_data\": {}\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/messages/1/save-to-kb/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "save-to-kb",
                ""
              ]
            },
            "description": "Save message response to knowledge base"
          }
        },
        {
          "name": "Save to Airtable Accounts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response indicates success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_action\": \"save_to_airtable\",\n  \"account_data\": {\n    \"company_name\": \"Test Company\",\n    \"company_type\": \"LLC\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/messages/1/save-to-airtable-accounts/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messages",
                "1",
                "save-to-airtable-accounts",
                ""
              ]
            },
            "description": "Save message data to Airtable Accounts"
          }
        },
        {
          "name": "Approve and Save",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response indicates success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"Client_Log\",\n  \"fields\": {\n    \"client_name\": \"John Doe\",\n    \"log_entry\": \"Business registration consultation completed\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/approve-and-save/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "approve-and-save",
                ""
              ]
            },
            "description": "Approve and save document/log/offer/template after user confirmation"
          }
        }
      ],
      "description": "Knowledge base and external integrations"
    },
    {
      "name": "Dashboard & Views",
      "item": [
        {
          "name": "Dashboard",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                ""
              ]
            },
            "description": "Main dashboard view showing recent messages and activity"
          }
        },
        {
          "name": "Real-time Chat View",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/real-time-chat/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "real-time-chat",
                ""
              ]
            },
            "description": "Real-time chat interface view"
          }
        }
      ],
      "description": "Main application views and dashboard"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set up environment variables",
          "pm.variables.set('baseUrl', pm.variables.get('baseUrl') || 'http://localhost:8000/ai');",
          "",
          "// Check if OpenAI API key is available",
          "if (!pm.variables.get('openai_api_key')) {",
          "    console.warn('OpenAI API key not set. Some requests may fail.');",
          "}"
        ]
      }
    }
  ]
}
